name: Go

on:
  push:
    branches: [ main ]
    tags: ['v*.*.*']  # Adjust this to match your tag pattern

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: ^1.16
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v ./cmd/ca

    - name: Test
      run: go test -v ./...

  release:
    name: Release Build
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ^1.16

    - name: Build for Linux
      run: GOOS=linux GOARCH=amd64 go build -o cellular-automata-linux-amd64 ./cmd/ca

    - name: Build for macOS
      run: GOOS=darwin GOARCH=amd64 go build -o cellular-automata-darwin-amd64 ./cmd/ca

    - name: Build for Windows
      run: GOOS=windows GOARCH=amd64 go build -o cellular-automata-windows-amd64.exe ./cmd/ca

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Linux Build
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./cellular-automata-linux-amd64
        asset_name: cellular-automata-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload macOS Build
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./cellular-automata-darwin-amd64
        asset_name: cellular-automata-darwin-amd64
        asset_content_type: application/octet-stream

    - name: Upload Windows Build
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./cellular-automata-windows-amd64.exe
        asset_name: cellular-automata-windows-amd64.exe
        asset_content_type: application/octet-stream
